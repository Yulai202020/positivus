@use "./vars.scss" as *;

.container {
    max-width: calc($container-width + $container-padding-x * 2);
    margin-inline: auto;
    padding-inline: $container-padding-x;
}

.button {
    @include flex-center(true);

    height: $button-height;
    padding-inline: 35px;
    font-size: 20px;
    color: $white;
    background-color: $black;
    border: $border;
    border-radius: $border-radius;

    @include hover {
        background-color: $lime;
        color: $black;
    }

    &.transparent {
        color: $black;
        background-color: transparent;
    }

    &.button-lime {
        background-color: $lime;
        color: $dark;

        @include hover {
            background-color: $black;
            color: $lime;
        }
    }
}

.visually-hidden {
    @include visually-hidden;
}

.hidden-mobile {
    @include mobile {
        display: none !important;
    }
}

.visible-mobile {
    @include mobile-above {
        display: none !important;
    }
}

.burger-button {
    @include reset-button;
    @include square(48px);

    @include hover {
        background-color: $lime;
    }

    position: relative;
    border-radius: $border-radius-small;

    &::after {
        @include abs-center;

        content: '';
        width: 50%;
        height: 2px;
        background-color: $black;
        border-radius: 5px;
        box-shadow: 0 -8px, 0 8px ;
    }
}

.cross-button {
    @include reset-button;
    @include square(48px);

    @include hover {
        background-color: $lime;
    }

    position: relative;
    border-radius: $border-radius-small;

    &::before,
    &::after {
        position: absolute;
        content: "";
        top: 50%;
        left: 7px;
        width: 70%;
        height: 2px;
        background-color: $black;
        border-radius: 5px;
    }

    &::before {
        rotate: 45deg;
    }

    &::after {
        rotate: -45deg;
    }
}


.section {
    padding-block: $section-padding-y;

    .section-header {
        display: flex;
        align-items: center;
        column-gap: 40px;

        .section-title {

        }

        .section-description {
            max-width: 580px;
        }

        &:not(:last-child) {
            margin-bottom: 80px;
            
            @include mobile {
                margin-bottom: 40px;
            }
        }

        @include mobile {
            flex-direction: column;
            row-gap: 30px;
            text-align: center;
        }
    }

    .section-body {


    }

    &.section-hidden-x {
        overflow-x: hidden;
    }
}

.puddle-bg {
    padding-inline: 7px;
    background-color: $lime;
    border-radius: $border-radius-small;


    &.puddle-light {
        background-color: $white;
    }
}

.grid {
    --gridColumns: 1;

    @for $i from 2 through 12 {
        &-#{$i} {
            --gridColumns: #{$i};
        }
    }

    display: grid;
    grid-template-columns: repeat(var(--gridColumns), 1fr);
    gap: 40px;

    @include mobile {
        gap: 30px;
    }


    &-2 {
        @include tablet {
            --gridColumns: 1;
        }
    }

    &-3 {
        @include desktop {
            --gridColumns: 2;
        }

        @include mobile {
            --gridColumns: 1;
        }
    }
}

.pagination {
    .pagination-list {
        display: flex;

        .pagination-item {
            .pagination-button {
                @include reset-button;
                @include flex-center(false);
                @include square(24px);

                @include hover {
                    color: $lime;
                }

                color: $white;

                &.is-current {
                    color: $lime;
                }
            }
        }
    }
}


.radios {
    display: flex;
    column-gap: 35px;
    border: none;

    .radios-title {

    }

    .radio {
        @include hover {
            opacity: 0.6;
        }

        display: flex;
        align-items: center;
        column-gap: 14px;
        transition-duration: $animation-duration;

        .radio-input {
            &:not(:checked) + .radio-emulator::after {
                opacity: 0;
            }
        }

        .radio-emulator {
            @include flex-center(false);
            @include square(28px);

            position: relative;
            background-color: $white;
            border: $border;
            border-radius: 50%;

            &::after {
                @include abs-center;
                @include square(60%);

                content: '';
                background-color: $lime;
                border-radius: inherit;
                transition-duration: $animation-duration;
            }
        }

        .radio-label {

        }
    }
}

.field {
    --fieldInputHeight: #{$input-height};
    --fieldInputTextColor: #{$black};
    --fieldInputBgColor: #{$white};
    --fieldInputBorderColor: #{$black};
    --fieldInputPlaceholderColor: #{$grey};
    --fieldInputHoverBgColor: #{$lime};

    display: flex;
    flex-direction: column;
    align-items: start;
    row-gap: 5px;

    .field-label {
        @include fluid-text(16, 14);
    }

    .field-input {
        @include hover {
            background-color: var(--fieldInputHoverBgColor);
        }

        width: 100%;
        height: var(--fieldInputHeight);
        padding-inline: 30px;
        color: var(--fieldInputTextColor);
        background-color: var(--fieldInputBgColor);
        border: 1px solid var(--fieldInputBorderColor);
        border-radius: $border-radius;

        &.field-textarea {
            height: 190px;
            padding-block: 18px;
            resize: none;

            @include mobile {
                height: 132px;
            }
        }

        &:focus {
            border-color: $lime;
            outline: none;
        }

        &::placeholder {
            color: var(--fieldInputPlaceholderColor);
        }

        @include mobile {
            padding-inline: 20px;
        }
    }


    &.field-big {
        --fieldInputHeight: $button-height
    }

    &.field-dark {
        --fieldInputBgColor: #{$dark};
        --fieldInputBorderColor: #{$white};
        --fieldInputPlaceholderColor: #{$white};
        --fieldInputTextColor: #{$lime};
        --fieldInputHoverBgColor: #{$black};
    }

    @include mobile {
        row-gap: 10px;
    }
}

.subcribe-form {
    display: flex;
    padding: 58px 40px;
    background-color: $dark;
    border-radius: $border-radius;
    column-gap: 20px;

    @include desktop {
        flex-direction: column;
        row-gap: 22px;
        padding: 30px;
        width: 100%;
        max-width: 450px;
    }
}